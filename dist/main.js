(()=>{"use strict";class t{constructor(t,e,n,i,s,a){this.title=t,this.description=e,this.dueDate=n,this.priority=i,this.notes=s,this.status=a}get title(){return this._title}get status(){return`${this._status}`}get dueDate(){return this._dueDate}get priority(){return this._priority}get info(){return`Title: ${this._title} \r\n\n        Description: ${this._description} \r\n\n        Due Date: ${this._dueDate} \r\n\n        Priority: ${this._priority} \r\n\n        Notes: ${this._notes} `}set title(t){this._title=t}set description(t){this._description=t}set priority(t){this._priority=t}set dueDate(t){this._dueDate=t}set notes(t){this._notes=t}set status(t){this._status=t}}class e{constructor(t,e){this.title=t,this.description=e}get title(){return this._title}get description(){return this._description}get info(){return`Project Title: ${this._title} \r\n\n        Project Description: ${this._description} `}set title(t){this._title=t}set description(t){this._description=t}}function n(){let e=document.getElementById("itemName").value,n=document.getElementById("itemDescription").value,i=document.getElementById("dueDate").value,s=document.getElementById("priority").value,a=document.getElementById("notes").value,d=document.getElementById("complete").value;return new t(e,n,i,s,a,d)}function i(){const t=document.getElementById("projectName").value,n=document.getElementById("projectDescription").value;return new e(t,n)}!function(){const t=document.getElementById("main"),e=document.getElementById("addButton"),s=document.getElementById("projectFormContainer"),a=document.getElementById("projectSubmitButton"),d=document.getElementById("projectClose");let o="",l="",c="",r=document.getElementById(l),u=[],p=[],m=[],h=[],f=[],g=[],C=document.getElementById(o);function y(){m.push([])}function L(t){f.push(t),g.push(t)}function b(){let e=document.createElement("div");return t.appendChild(e),e}function E(t,e){let n=document.createElement("div");n.classList.add("project");let i=document.createElement("p");return i.classList.add("projectInfo"),i.setAttribute("data-projectInfo",m.length-1),i.textContent=e.info,t.appendChild(n),n.appendChild(i),n}function v(t){return t.setAttribute("id",m.length-1),t.id}function $(t){let e=document.createElement("div"),n=document.createElement("select");n.setAttribute("data-sortinput",m.length-1),e.classList.add("sortButtons");let i=document.createElement("option");i.setAttribute("value","Name"),i.textContent="Sort By Name";let s=document.createElement("option");s.setAttribute("value","Priority"),s.textContent="Sort By Priority";let a=document.createElement("option");a.setAttribute("value","dueDate"),a.textContent="Sort By Due Date";let d=document.createElement("option");d.setAttribute("value","Completion"),d.textContent="Sort By Completion";let o=document.createElement("button");return o.setAttribute("data-sort",m.length-1),o.textContent="Submit",t.appendChild(e),e.appendChild(n),n.appendChild(i),n.appendChild(s),n.appendChild(a),n.appendChild(d),e.appendChild(o),o}function k(t){let e=document.createElement("div");return e.classList.add("buttonSection"),e.setAttribute("data-projectButtons",m.length-1),t.appendChild(e),e}function A(t){let e=document.createElement("button");return e.classList.add("addToDoButton"),e.setAttribute("data-add",m.length-1),e.innerText="Add Task",t.appendChild(e),e}function I(t){u.push(t)}function B(t){let e=document.createElement("button");return e.classList.add("deleteButton"),e.setAttribute("data-delete",m.length-1),e.innerText="Delete",t.appendChild(e),e}function _(t){p.push(t)}function N(t){let e=document.createElement("button");return e.classList.add("projectEditButton"),e.setAttribute("data-projectedit",m.length-1),e.innerText="Edit Project",t.appendChild(e),e}function x(t){h.push(t)}function S(t){t.addEventListener("click",(function(){s.classList.remove("hidden"),s.classList.add("edit"),c=t.dataset.projectedit}))}function D(){let t=Array.from(document.querySelectorAll("input"));for(let e=0;e<t.length;e++)t[e].value=""}function j(t){t.addEventListener("click",(function(){w.classList.remove("hidden"),o=t.dataset.add,C=document.getElementById(o),F.classList.remove("editItem"),F.classList.add("addItem")}))}function T(e){e.addEventListener("click",(function(){l=e.dataset.delete,r=document.getElementById(l),m.splice(l,1,""),f.splice(l,1,""),u.splice(l,1,""),p.splice(l,1,""),u.splice(l,1,""),document.querySelector(`[data-projectbuttons="${l}"]`),t.removeChild(r.parentNode),console.log(m),ft()}))}function q(t){t.addEventListener("click",(function(){let e=t.dataset.sort,n=document.querySelector(`[data-sortinput="${e}"]`),i=m[e];0!=i.length&&(function(t,e){"Name"==e.value?(t.sort(((t,e)=>t.title>e.title?1:-1)),t.sort(((t,e)=>t._title>e._title?1:-1))):"Priority"==e.value?(t.sort(((t,e)=>t.priority>e.priority?1:-1)),t.sort(((t,e)=>t._priority>e._priority?1:-1))):"Completion"==e.value?(t.sort(((t,e)=>t.status>e.status?-1:1)),t.sort(((t,e)=>t._status>e._status?-1:1))):"dueDate"==e.value&&(t.sort(((t,e)=>t.dueDate>e.dueDate?1:-1)),t.sort(((t,e)=>t._dueDate>e._dueDate?1:-1)))}(i,n),function(t,e){let n=document.getElementById(t);!function(t,e){for(let n=0;n<e.length;n++)t.removeChild(t.lastChild)}(n,e);for(let i=0;i<e.length;i++){let e=document.createElement("div");e.classList.add("taskContainer"),n.appendChild(e),e.setAttribute("data-taskcontainer",`${t}${[i]}`),e.setAttribute("data-specifictaskcontainer",[i]);let s=Z(m[t][i],e);s.setAttribute("data-checkbox",`${t}${[i]}`),s.setAttribute("data-specificcheckbox",[i]);let a=X(e,m[t][i]);a.setAttribute("data-task",`${t}${[i]}`),a.setAttribute("data-specifictask",[i]);let d=tt(e),o=et(d);o.setAttribute("data-edit",`${t}${[i]}`),o.setAttribute("data-specificedit",[i]);let l=nt(d);l.setAttribute("data-deleteItem",`${t}${[i]}`),l.setAttribute("data-specificdeleteItem",[i]),it(s),st(o),at(l),dt(),ot(l),ct(s),rt(s),lt(s)}}(e,i),ft())}))}function P(t){let e=document.createElement("div");e.classList.add("statusBarContainer");let n=document.createElement("div"),i=document.createElement("div");return n.classList.add("statusBar"),n.setAttribute("data-statusbar",m.length-1),i.classList.add("percentageText"),i.setAttribute("data-percentagetext",m.length-1),t.appendChild(e),e.appendChild(n),e.appendChild(i),statusbar}e.addEventListener("click",(function(){s.classList.remove("hidden")})),a.addEventListener("click",(function(){if(!s.classList.contains("edit")){y();let t=i(),e=b(),n=E(e,t);L(t),v(n),P(n),q($(n));let a=k(e),d=N(a);x(d);let o=A(a);I(o);let l=B(a);_(l),j(o),T(l),S(d),s.classList.add("hidden"),D(),ft(),console.log(m)}})),a.addEventListener("click",(function(){if(s.classList.contains("edit")){let t=document.querySelector(`[data-projectinfo="${c}"]`),e=i();f.splice(c,1,e),t.textContent=e.info,D(),s.classList.add("hidden"),s.classList.remove("edit"),ft()}})),d.addEventListener("click",(function(){s.classList.add("hidden")}));const w=document.getElementById("itemFormContainer");let F=document.getElementById("itemForm"),O="",J=[],R=[];const M=document.getElementById("itemSubmitButton");let z="",G=document.getElementById(z),H=document.getElementById(O),K=document.getElementById("reset");const Q=document.getElementById("taskClose");let U=document.querySelector(`[data-checkbox="${z}"]`),V=[];function W(){let t=document.createElement("div");return t.classList.add("taskContainer"),C.appendChild(t),t}function X(t,e){let n=document.createElement("div");return n.classList.add("newTask"),"Complete"!=e.status&&"Complete"!=e._status?n.classList.add("taskNotComplete"):n.classList.add("taskComplete"),n.textContent=e.info,t.appendChild(n),n}function Y(t){m[o].push(t)}function Z(t,e){let n=document.createElement("button");return n.classList.add("checkbox"),"Complete"!=t.status&&"Complete"!=t._status?(n.classList.add("notComplete"),e.appendChild(n)):"Complete"==t._status&&(n.classList.add("Complete"),e.appendChild(n)),n}function tt(t){let e=document.createElement("div");return e.classList.add("itemButtons"),t.appendChild(e),e}function et(t){let e=document.createElement("button");return e.innerText="Edit Task",e.classList.add("editTaskButton"),t.appendChild(e),e}function nt(t){let e=document.createElement("button");return e.innerText="Delete Task",e.classList.add("deleteTaskButton"),t.appendChild(e),e}function it(t){V.push(t)}function st(t){J.push(t)}function at(t){R.push(t)}function dt(){for(let t=0;t<J.length;t++)J[t].addEventListener("click",(function(){w.classList.remove("hidden"),F.classList.remove("addItem"),F.classList.add("editItem"),z=J[t].dataset.edit,G=document.querySelector(`[data-task="${z}"]`)}))}function ot(t){t.addEventListener("click",(function(){O=t.dataset.deleteitem;let e=t.dataset.specificdeleteitem;H=document.querySelector(`[data-taskContainer="${O}"]`);let n=H.parentNode;n.removeChild(H),R.splice(e,1),J.splice(e,1),V.splice(e,1);let i=n.id;m[i].splice(e,1),function(t){let e=ut(),n=t,i=function(t,e){let n=document.querySelector(`[data-statusbar="${e}"]`),i=document.createElement("div");return n.firstChild&&n.removeChild(n.firstChild),i.style.width=`${t}%`,i.style.height="100%",n.appendChild(i),n}(e.percentageArray[n],n);if(0==isNaN(e.percentageArray[n]))mt(i,e.percentageArray[n]);else{let t=i.dataset.statusbar;document.querySelector(`[data-percentagetext="${t}"]`).innerText=""}}(i),ft()}))}function lt(t){t.addEventListener("click",(function(){let e=ut(),n=t.parentNode.parentNode.id,i=document.querySelector(`[data-statusbar="${n}"]`),s=document.createElement("div");i.firstChild&&i.removeChild(i.firstChild),s.style.width=`${e.percentageArray[n]}%`,s.style.height="100%",i.appendChild(s),mt(i,e.percentageArray[n])}))}function ct(t){t.addEventListener("click",(function(){let e=t.dataset.specificcheckbox,n=t.parentNode.parentNode.id;t.classList.contains("notComplete")?(t.classList.remove("notComplete"),t.classList.add("Complete"),m[n][e].status="Complete"):t.classList.contains("Complete")&&(t.classList.add("notComplete"),t.classList.remove("Complete"),m[n][e].status="Not Complete"),ft()}))}function rt(t){t.addEventListener("click",(function(){let e=t.dataset.checkbox,n=document.querySelector(`[data-task="${e}"]`);t.classList.contains("Complete")?(n.classList.remove("taskNotComplete"),n.classList.add("taskComplete")):t.classList.contains("notComplete")&&(n.classList.add("taskNotComplete"),n.classList.remove("taskComplete"))}))}function ut(){let t=[],e=[];for(let n=0;n<m.length;n++)if("object"==typeof m[n]){let i=m[n].filter(pt);t.push(i);let s=Math.round(i.length/m[n].length*100);e.push(s)}else t.push(""),e.push("");return{filteredArrayList:t,percentageArray:e}}function pt(t){return"Complete"==t._status}function mt(t,e){let n=t.dataset.statusbar;document.querySelector(`[data-percentagetext="${n}"]`).innerText=`${e}% Complete`}function ht(){let t=ut();mt(function(t){let e=document.querySelector(`[data-statusbar="${o}"]`),n=document.createElement("div");return e.firstChild&&e.removeChild(e.firstChild),n.style.width=`${t}%`,n.style.height="100%",e.appendChild(n),e}(t.percentageArray[o]),t.percentageArray[o])}function ft(){localStorage.setItem("storedProjectList",JSON.stringify(m)),localStorage.setItem("projectInfo",JSON.stringify(f))}function gt(t){Object.defineProperty(t,"status",{set(e){t._status=e}}),t.info=function(t){return`Title: ${t._title} \r\n\n        Description: ${t._description} \r\n\n        Due Date: ${t._dueDate} \r\n\n        Priority: ${t._priority} \r\n\n        Notes: ${t._notes} `}(t)}function Ct(t){y();let e=b(),n=E(e,t);L(t),v(n),P(n),q($(n));let i=k(e),s=N(i);x(s);let a=A(i);I(a);let d=B(i);_(d),j(a),T(d),S(s)}function yt(t){Y(t);let e=W();e.setAttribute("data-taskcontainer",`${[o]}${m[o].length-1}`),e.setAttribute("data-specifictaskcontainer",""+(m[o].length-1));let n=Z(t,e);n.setAttribute("data-checkbox",`${[o]}${m[o].length-1}`),n.setAttribute("data-specificcheckbox",""+(m[o].length-1));let i=X(e,t);i.setAttribute("data-task",`${[o]}${m[o].length-1}`),i.setAttribute("data-specifictask",""+(m[o].length-1)),ht();let s=tt(e),a=et(s);a.setAttribute("data-edit",`${[o]}${m[o].length-1}`),a.setAttribute("data-specificedit",""+(m[o].length-1));let d=nt(s);d.setAttribute("data-deleteItem",`${[o]}${m[o].length-1}`),d.setAttribute("data-specificdeleteItem",""+(m[o].length-1)),it(n),st(a),at(d),dt(),ot(d),ct(n),lt(n),rt(n)}M.addEventListener("click",(function(){F.classList.contains("addItem")?function(){let t=n();if(null!=t&&""!=t.dueDate){Y(t);let e=W();e.setAttribute("data-taskcontainer",`${[o]}${m[o].length-1}`),e.setAttribute("data-specifictaskcontainer",""+(m[o].length-1));let n=Z(t,e);n.setAttribute("data-checkbox",`${[o]}${m[o].length-1}`),n.setAttribute("data-specificcheckbox",""+(m[o].length-1));let i=X(e,t);i.setAttribute("data-task",`${[o]}${m[o].length-1}`),i.setAttribute("data-specifictask",""+(m[o].length-1)),ht();let s=tt(e),a=et(s);a.setAttribute("data-edit",`${[o]}${m[o].length-1}`),a.setAttribute("data-specificedit",""+(m[o].length-1));let d=nt(s);d.setAttribute("data-deleteItem",`${[o]}${m[o].length-1}`),d.setAttribute("data-specificdeleteItem",""+(m[o].length-1)),it(n),st(a),at(d),dt(),ot(d),ct(n),lt(n),rt(n),D(),w.classList.add("hidden"),ft()}else alert("Please Fill Out Required Fields")}():F.classList.contains("editItem")&&function(){F.classList.remove("addItem");let t=n();var e;null!=t&&""!=t.dueDate?(G.innerText="",G.innerText=t.info,function(t){let e=G.parentNode,n=G.dataset.specifictask,i=e.parentNode.id;m[i].splice(n,1,t)}(t),function(t){let e=document.querySelector(`[data-task="${z}"]`),n=e.dataset.specifictask,i=e.parentNode.parentNode.id;"Complete"!=t.status?(e.classList.add("taskNotComplete"),e.classList.remove("taskComplete"),m[i][n].status="Not Complete"):"Complete"==t.status&&(e.classList.remove("taskNotComplete"),e.classList.add("taskComplete"),m[i][n].status="Complete")}(t),"Complete"!=(e=t).status?(U=document.querySelector(`[data-checkbox="${z}"]`),U.classList.add("notComplete"),U.classList.remove("Complete")):"Complete"==e.status&&(U=document.querySelector(`[data-checkbox="${z}"]`),U.classList.add("Complete"),U.classList.remove("notComplete")),function(){let t=ut(),e=G.parentNode.parentNode.id,n=function(t){let e=G.parentNode.parentNode.id,n=document.querySelector(`[data-statusbar="${e}"]`),i=document.createElement("div");return n.firstChild&&n.removeChild(n.firstChild),i.style.width=`${t}%`,i.style.height="100%",n.appendChild(i),n}(t.percentageArray[e]);NaN!=t.percentageArray[e]&&mt(n,t.percentageArray[e])}(),D(),w.classList.add("hidden"),ft()):alert("Please Fill Out Required Fields")}()})),K.addEventListener("click",(()=>D())),Q.addEventListener("click",(()=>w.classList.add("hidden"))),window.onload=()=>{!function(){let t=JSON.parse(localStorage.getItem("storedProjectList")),e=JSON.parse(localStorage.getItem("projectInfo"));for(const t in e){let i=e[t];null!=i._title?((n=i).info=function(t){return`Project Title: ${t._title} \r\n\n        Project Description: ${t._description} \r\n`}(n),Ct(i)):(f.push(""),m.push(""))}var n;for(const e in t)""!=t[e]&&t[e].forEach((function(t){C=document.getElementById(e),o=e;let n=t;gt(n),console.log(n._status),yt(n),console.log(n)}))}()}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,